>> Tests for @mlld/string module

/import { * } from "../modules/test.mld.md"
/import { * } from "../modules/string.mld.md"

## Test trim
/var @test_trim_spaces = @eq(@trim("  hello world  "), "hello world")
/var @test_trim_tabs = @eq(@trim("\thello\t"), "hello")
/var @test_trim_newlines = @eq(@trim("\nhello\n"), "hello")
/var @test_trim_mixed = @eq(@trim(" \t\nhello world\n\t "), "hello world")
/var @test_trim_empty = @eq(@trim("   "), "")

## Test case conversion
/var @test_toLowerCase = @eq(@toLowerCase("Hello WORLD"), "hello world")
/var @test_toLowerCase_mixed = @eq(@toLowerCase("HeLLo WoRLd 123"), "hello world 123")
/var @test_toUpperCase = @eq(@toUpperCase("Hello world"), "HELLO WORLD")
/var @test_toUpperCase_mixed = @eq(@toUpperCase("hello WORLD 123"), "HELLO WORLD 123")

## Test split
/var @test_split_spaces = @deepEq(@split("hello world test", " "), ["hello", "world", "test"])
/var @test_split_comma = @deepEq(@split("a,b,c", ","), ["a", "b", "c"])
/var @test_split_empty = @deepEq(@split("", ","), [""])
/var @test_split_no_delimiter = @deepEq(@split("hello", ","), ["hello"])

## Test join
/var @test_join_spaces = @eq(@join(["hello", "world"], " "), "hello world")
/var @test_join_comma = @eq(@join(["a", "b", "c"], ","), "a,b,c")
/var @test_join_empty = @eq(@join([], ","), "")
/var @test_join_single = @eq(@join(["hello"], ","), "hello")

## Test replace
/var @test_replace_first = @eq(@replace("hello hello", "hello", "hi"), "hi hello")
/var @test_replace_not_found = @eq(@replace("hello world", "foo", "bar"), "hello world")
/var @test_replace_empty = @eq(@replace("hello", "hello", ""), "")

## Test replaceAll
/var @test_replaceAll_multiple = @eq(@replaceAll("hello hello hello", "hello", "hi"), "hi hi hi")
/var @test_replaceAll_not_found = @eq(@replaceAll("hello world", "foo", "bar"), "hello world")
/var @test_replaceAll_pattern = @eq(@replaceAll("a.b.c.d", ".", "-"), "a-b-c-d")

## Test startsWith/endsWith
/var @test_startsWith_true = @ok(@startsWith("hello world", "hello"))
/var @test_startsWith_false = @notOk(@startsWith("hello world", "world"))
/var @test_startsWith_empty = @ok(@startsWith("hello", ""))
/var @test_endsWith_true = @ok(@endsWith("hello world", "world"))
/var @test_endsWith_false = @notOk(@endsWith("hello world", "hello"))
/var @test_endsWith_empty = @ok(@endsWith("hello", ""))

## Test padding
/var @test_padStart_number = @eq(@padStart("5", 3, "0"), "005")
/var @test_padStart_string = @eq(@padStart("hi", 5, "."), "...hi")
/var @test_padStart_no_pad = @eq(@padStart("hello", 3, "x"), "hello")
/var @test_padEnd_number = @eq(@padEnd("5", 3, "0"), "500")
/var @test_padEnd_string = @eq(@padEnd("hi", 5, "."), "hi...")
/var @test_padEnd_no_pad = @eq(@padEnd("hello", 3, "x"), "hello")

## Test slice/substring"
/var @test_slice_positive = @eq(@slice("hello world", 0, 5), "hello")
/var @test_slice_negative = @eq(@slice("hello world", -5), "world")
/var @test_slice_middle = @eq(@slice("hello world", 6, 11), "world")
/var @test_substring_basic = @eq(@substring("hello world", 0, 5), "hello")
/var @test_substring_swap = @eq(@substring("hello world", 5, 0), "hello")

## Test indexOf/lastIndexOf
/var @test_indexOf_found = @eq(@indexOf("hello world hello", "hello"), 0)
/var @test_indexOf_not_found = @eq(@indexOf("hello world", "foo"), -1)
/var @test_indexOf_second = @eq(@indexOf("hello world hello", "hello", 1), 12)
/var @test_lastIndexOf_found = @eq(@lastIndexOf("hello world hello", "hello"), 12)
/var @test_lastIndexOf_not_found = @eq(@lastIndexOf("hello world", "foo"), -1)

## Test includes
/var @test_includes_true = @ok(@includes("hello world", "world"))
/var @test_includes_false = @notOk(@includes("hello world", "foo"))
/var @test_includes_empty = @ok(@includes("hello", ""))

## Test repeat
/var @test_repeat_basic = @eq(@repeat("ha", 3), "hahaha")
/var @test_repeat_zero = @eq(@repeat("test", 0), "")
/var @test_repeat_one = @eq(@repeat("x", 1), "x")

## Test charAt/charCodeAt
/var @test_charAt_first = @eq(@charAt("hello", 0), "h")
/var @test_charAt_last = @eq(@charAt("hello", 4), "o")
/var @test_charAt_out_of_bounds = @eq(@charAt("hello", 10), "")
/var @test_charCodeAt_h = @eq(@charCodeAt("hello", 0), 104)
/var @test_charCodeAt_space = @eq(@charCodeAt("a b", 1), 32)